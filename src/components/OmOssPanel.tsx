import React, { forwardRef, useEffect, useState } from "react";
import Collapsible from "./Collapsible";
import SocialLinks from "./SocialLinks";
import Modal from "./Modal";

/** –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ª–∞–π—Ç–±–æ–∫—Å–µ:
 *  - 'contain' ‚Äî –≤–º–µ—â–∞–µ—Ç —Ü–µ–ª–∏–∫–æ–º (–±–µ–∑ –æ–±—Ä–µ–∑–∫–∏)
 *  - 'cover'   ‚Äî –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (—Å –æ–±—Ä–µ–∑–∫–æ–π –ª–∏—à–Ω–µ–≥–æ)
 */
type LightboxMode = "contain" | "cover";
const LIGHTBOX_MODE: LightboxMode = "cover";

const IMG_CLASS: Record<LightboxMode, string> = {
  contain: "max-h-full max-w-full object-contain",
  cover: "h-full w-full object-cover",
};

type Props = {
  open: boolean;
  images: string[];
};

const OmOssPanel = forwardRef<HTMLDivElement, Props>(function OmOssPanel(
  { open, images }: Props,
  ref
) {
  const [lightboxIdx, setLightboxIdx] = useState<number | null>(null);

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å—Ç—Ä–µ–ª–∫–∞–º–∏ ‚Üê ‚Üí
  useEffect(() => {
    if (lightboxIdx === null || images.length === 0) return;
    const onKey = (e: KeyboardEvent) => {
      if (e.key === "ArrowRight") {
        setLightboxIdx((i) => (i === null ? 0 : (i + 1) % images.length));
      } else if (e.key === "ArrowLeft") {
        setLightboxIdx((i) =>
          i === null ? 0 : (i - 1 + images.length) % images.length
        );
      }
    };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, [lightboxIdx, images.length]);

  const closeLightbox = () => setLightboxIdx(null);
  const next = () =>
    setLightboxIdx((i) => (i === null ? 0 : (i + 1) % images.length));
  const prev = () =>
    setLightboxIdx((i) =>
      i === null ? 0 : (i - 1 + images.length) % images.length
    );

  return (
    <section id="om-oss-info" className="scroll-mt-24" ref={ref}>
      <Collapsible open={open} className="mt-3">
        <article className="rounded-2xl bg-white/90 backdrop-blur p-5 md:p-8 shadow-lg">
          <div className="prose max-w-none prose-p:my-3 prose-headings:font-head">
            <h3 className="font-head text-xl md:text-2xl text-[var(--deep-green)] mb-2">
              Velkommen til Bakkelund üåø
            </h3>
            <p className="font-menu">
              Bakkelund er v√•rt hjem ‚Äî et sted der familie, venner og fellesskap
              m√∏tes. Her lever vi side om side med katten v√•r, de glade h√∏nene
              og naturens rytme.
            </p>
            <p className="font-menu">
              Tr√• inn i en hage fylt med blomster, urter og gr√∏nnsaker, vandre
              gjennom den magiske skogen med sine skjulte hytter, tretopphus,
              underjordiske badehall og andre sm√• overraskelser som venter p√• √•
              bli oppdaget.
            </p>
            {/* —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –æ—Ç—Å—Ç—É–ø –∏ –ñ–ò–†–ù–´–ô –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–±–∑–∞—Ü */}
            <p className="font-menu mt-6 font-bold">
              Bakkelund er ikke bare et sted ‚Äî det er en opplevelse av natur,
              fantasi og fellesskap.
            </p>
          </div>

          {/* –º–∏–Ω–∏-–≥–∞–ª–µ—Ä–µ—è */}
          {images.length > 0 && (
            <div className="mt-6 grid grid-cols-2 md:grid-cols-3 gap-3">
              {images.map((src, i) => (
                <button
                  key={i}
                  type="button"
                  onClick={() => setLightboxIdx(i)}
                  className="group overflow-hidden rounded-xl focus:outline-none focus:ring-2 focus:ring-[var(--terracotta)]"
                  aria-label={`√Öpne bilde ${i + 1}`}
                >
                  <img
                    src={src}
                    alt={`Bakkelund ${i + 1}`}
                    className="h-28 md:h-36 w-full object-cover transition-transform duration-200 group-hover:scale-[1.03] cursor-zoom-in"
                    loading="lazy"
                  />
                </button>
              ))}
            </div>
          )}

          {/* –∫–æ–Ω—Ç–∞–∫—Ç—ã + —Å–æ—Ü—Å–µ—Ç–∏ */}
          <div className="mt-6 rounded-xl bg-[var(--sand)] p-4">
            <h4 className="font-head text-[var(--deep-green)] mb-2">Kontakt</h4>
            <div className="text-sm text-gray-700 font-menu">
              <p>
                E-post: <span className="underline">post@bakkelund.no</span>
              </p>
              <p>
                Telefon: <span className="underline">+47 000 00 000</span>
              </p>
            </div>
            <div className="mt-3">
              <SocialLinks />
            </div>
          </div>
        </article>
      </Collapsible>

      {/* –õ–∞–π—Ç–±–æ–∫—Å */}
      <Modal
        open={lightboxIdx !== null}
        onClose={closeLightbox}
        maxWidthClass="max-w-4xl"
        panelClassName="modal-panel"
      >
        {lightboxIdx !== null && images.length > 0 && (
          // –î–í–ê —Ä—è–¥–∞: –∫–∞—Ä—Ç–∏–Ω–∫–∞ (—Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è) + –ø–∞–Ω–µ–ª—å –∫–Ω–æ–ø–æ–∫ (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞)
          <div className="grid h-full grid-rows-[minmax(0,1fr)_auto]">
            {/* –†—è–¥ 1: –∑–æ–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ‚Äî –±–µ–∑ —Å–∫—Ä–æ–ª–ª–∞ */}
            <div className="min-h-0 grid place-items-center overflow-hidden">
              <img
                src={images[lightboxIdx]}
                alt={`Bilde ${lightboxIdx + 1}`}
                className={IMG_CLASS[LIGHTBOX_MODE]}
              />
            </div>

            {/* –†—è–¥ 2: –∫–Ω–æ–ø–∫–∏ ‚Äî –ù–ï —Å–∂–∏–º–∞—é—Ç—Å—è, –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞ */}
            <div className="pt-3 flex items-center justify-between shrink-0">
              <button
                onClick={prev}
                className="rounded-md px-3 py-2 border border-[var(--menu-green)] text-[var(--menu-green)] active:scale-95 hover:bg-[var(--menu-green)] hover:text-white transition"
              >
                ‚óÄ Forrige
              </button>
              <span className="text-sm text-[var(--menu-green)]">
                {lightboxIdx + 1} / {images.length}
              </span>
              <button
                onClick={next}
                className="rounded-md px-3 py-2 border border-[var(--menu-green)] text-[var(--menu-green)] active:scale-95 hover:bg-[var(--menu-green)] hover:text-white transition"
              >
                Neste ‚ñ∂
              </button>
            </div>
          </div>
        )}
      </Modal>
    </section>
  );
});

export default OmOssPanel;
